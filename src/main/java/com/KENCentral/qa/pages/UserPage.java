package com.KENCentral.qa.pages;

import java.util.NoSuchElementException;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;


import com.KENCentral.qa.base.TestBase;


public class UserPage extends TestBase {

	@FindBy(xpath="//a[contains(text(),'All Users')]")
	WebElement alluser;
	
	
	@FindBy(xpath="//a[@id='Addbtn']")
	WebElement adduser;
	
	
	@FindBy(xpath="//input[@id='AddFirstName']")
	WebElement FirstName;
	
	@FindBy(xpath="//input[@id='addLastName']")
	WebElement LastName;
	
	@FindBy(xpath="//div[contains(@class,'col-md-12 for_padding_zero')]//input[contains(@placeholder,'Email Id')]")
	WebElement Email;
	
	@FindBy(xpath="//div[contains(@class,'headng')][contains(text(),'Password')]")
	WebElement Passwordlbl;
	
	@FindBy(xpath="//div[@id='UserAdd']//div[contains(@class,'headng')][contains(text(),'Contact Information')]")
	WebElement ContactInfolbl;
	
	@FindBy(xpath="//div[@class='col-md-3 for_padding_zero']//span[@class='k-select']")
	WebElement MobileNo;
	
	@FindBy(xpath="//input[@id='addMobile']")
	WebElement MobileNotxt;
	
	@FindBy(xpath="//input[@id='addCity']")
	WebElement City;
	
	@FindBy(xpath="//input[@id='txtState']")
	WebElement State;
	
	@FindBy(xpath="//input[@id='txtCountry']")
	WebElement Country;
	
	@FindBy(xpath="//button[@id='btnUserAdd']")
	WebElement UserAdd;
	
	
	@FindBy(xpath="//input[@id='rdoAuto2']")
	WebElement autoradiobtn;
	
	@FindBy(xpath="//input[@id='addAutoPsw']")
	WebElement autopassword;
	
	@FindBy(xpath="//input[@id='rdoAuto1']")
	WebElement createpassword;
	
	@FindBy(xpath="//input[@id='addnewpassword']")
	WebElement addnewpassword;
	
	@FindBy(xpath="//input[@id='addconfirmPsw']")
	WebElement addconfirmpassword;
	
	@FindBy(xpath="//input[contains(@value,'AllowUser')]")
	WebElement selectallowUser;
/*	
	//@FindBy(xpath="//div[contains(@id,'MobilenoPrefix-list')]")
	
	@FindBy(xpath="//ul[@id='MobilenoPrefix_listbox']//child::li[contains(text(),'+91')]")
	WebElement selectmobno;*/
	
	//State autocomplete list
	@FindBy(xpath="//ul[@id='txtState_listbox']")
	WebElement autoselectoption;
	
	@FindBy(tagName="li")
	WebElement tagname;
	
	//country autocomplete list
	@FindBy(xpath="//ul[@id='txtCountry_listbox']")
	WebElement selectoption;
	
	public UserPage() {
		PageFactory.initElements(driver, this);
	}
	public String getcurrentUserPageURL() {
		return driver.getCurrentUrl();
	}
	
	public void clickonallUser() {
		alluser.click();
	}
	public void clickonaddUser() {
		adduser.click();
		
	}
	
	public void AddNewUser() throws InterruptedException {
		FirstName.sendKeys("Jyoti");
		LastName.sendKeys("Das");
		Email.sendKeys("jyotipravadas91@gmail.com");
	}
	public String validatepasswordheader() {
		return Passwordlbl.getText();
			
	}
		public boolean password() {
			String passwordtype=prop.getProperty("passwordtype");
			if(passwordtype.equals("autogenerated")) 
			{
				autoradiobtn.isEnabled();
				autopassword.getText();
			}
			else  {
				createpassword.click();
				addnewpassword.sendKeys("Jyoti@Das1");
				addconfirmpassword.sendKeys("Jyoti@Das1");
				selectallowUser.isSelected();
			}
			return false;
		}
		/*if(autoradiobtn.isEnabled())
		{
        autopassword.getText();
			
		}else 
		{
			createpassword.click();
			addnewpassword.sendKeys("Jyoti@Das1");
			addconfirmpassword.sendKeys("Jyoti@Das1");
			selectallowUser.isSelected();
			
		}
		
*/	
		public String validatecontactheader() {
	
	         return ContactInfolbl.getText();
	
       }
		
		public void entermobile() throws InterruptedException {
	        Thread.sleep(5000);
	        MobileNo.click();
	 
	        Thread.sleep(1000);
            Actions keyDown = new Actions(driver);
            keyDown.sendKeys(Keys.chord(Keys.DOWN)).perform();
	        MobileNotxt.sendKeys("9090101111");
         }
	
		public void entercity() {
		City.sendKeys("BBSR");
		}
		public void selectstate() {
		State.sendKeys("O");
		selectOptionWithText("Odisha");
		}
		public void selectcountry() {
		Country.sendKeys("I");
		selectOptionWithTextI("India");
	}
	public void selectOptionWithTextI(String textToSelect) {
		// TODO Auto-generated method stub
		try {
			
			//	wait.until(ExpectedConditions.visibilityOf(selectoption));
				java.util.List<WebElement> optionsToSelect = selectoption.findElements(By.tagName("li"));
				for(WebElement option : optionsToSelect){
			        if(option.getText().equals(textToSelect)) {
			        	System.out.println("Trying to select: "+textToSelect);
			            option.click();
			            
			            break;
			        }
			    }
				
			} catch (NoSuchElementException e) {
				System.out.println(e.getStackTrace());
			}
			catch (Exception e) {
				System.out.println(e.getStackTrace());
			}
	}
	public void selectOptionWithText(String testToSelect) {
		// TODO Auto-generated method stub
		try {
			
		//	wait.until(ExpectedConditions.visibilityOf(autoselectoption));
			java.util.List<WebElement> optionsToSelect = autoselectoption.findElements(By.tagName("li"));
			for(WebElement option : optionsToSelect){
		        if(option.getText().equals(testToSelect)) {
		        	System.out.println("Trying to select: "+testToSelect);
		            option.click();
		            
		            break;
		        }
		    }
			
		} catch (NoSuchElementException e) {
			System.out.println(e.getStackTrace());
		}
		catch (Exception e) {
			System.out.println(e.getStackTrace());
		}
	}
	
	

	
}
